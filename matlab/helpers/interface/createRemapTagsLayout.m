function createRemapTagsLayout(tab)
latestHED = 'HED 2.026';
mapFile = '';
tsvFile = '';
outputFile = '';
tsvTagColumns = '2';
mapCtrl = '';
tsvCtrl = '';
outputCtrl = '';
createPanel(tab);

    function browseOutputCallback(src, eventdata, replaceOutputCtrl, ...
            myTitle) %#ok<INUSL>
        % Callback for browse button sets a directory for control      
        defaultName = '';
        if ~isempty(tsvFile)
           [~, defaultName, ext] = fileparts(tsvFile); 
           defaultName = [defaultName '_update' ext];
        end
        [file, path] = uiputfile({'*.tsv', 'MATLAB Files (*.tsv)'}, ...
            myTitle, defaultName);
        if ischar(file) && ~isempty(file)
            outputFile = fullfile(path, file);
            set(replaceOutputCtrl, 'String', outputFile);
        end
    end % browseOutputCallback

    function browseMapCallback(src, eventdata, replaceTxtCtrl, ...
            myTitle) %#ok<INUSL>
        % Callback for 'Browse' button that sets the 'Remap' editbox
        [tFile, tPath] = uigetfile({'*.tsv', 'Tab-delimited files'; ...
            '*.txt', 'Text files'; '*.*', 'All files'}, myTitle);
        if tFile ~= 0
            mapFile = fullfile(tPath, tFile);
            set(replaceTxtCtrl, 'String', mapFile);
        end
    end % browseMapCallback

    function browseTagsCallback(src, eventdata, replaceTagCtrl, ...
            myTitle) %#ok<INUSL>
        % Callback for 'Browse' button that sets the 'Tags' editbox
        [tFile, tPath] = uigetfile({'*.tsv', 'Tab-delimited files'; ...
            '*.txt', 'Text files'; '*.*', 'All files'}, myTitle);
        if tFile ~= 0
            tsvFile = fullfile(tPath, tFile);
            set(replaceTagCtrl, 'String', tsvFile);
        end
    end % browseTagsCallback

    function columnsCtrlCallback(src, eventdata) %#ok<INUSD>
        % Callback for user directly editing the 'Columns' editbox
        tsvTagColumns = str2num(get(src, 'String')); %#ok<ST2NM>
    end % columnsCtrlCallback

    function createButtons(panel)
        % Creates the buttons in the panel
        uicontrol('Parent', panel, ...
            'String', 'Browse', ...
            'Style', 'pushbutton', ...
            'TooltipString', ['Press to choose tab-delimited input' ...
            ' file.'], ...
            'Units','normalized',...
            'Callback', {@browseTagsCallback, ...
            tsvCtrl, ...
            'Browse for HED remap file'}, ...
            'Position', [0.775 0.9 0.2 0.1]);
        uicontrol('Parent', panel, ...
            'String', 'Browse', ...
            'Style', 'pushbutton', ...
            'TooltipString', 'Press to choose remap file.', ...
            'Units','normalized',...
            'Callback', {@browseMapCallback, ...
            mapCtrl, 'Browse for tag file'}, ...
            'Position', [0.775 0.75 0.2 0.1]);
        uicontrol('Parent', panel, ...
            'String', 'Browse', ...
            'Style', 'pushbutton', ...
            'TooltipString', ...
            'Press to choose output file directory.', ...
            'Units','normalized',...
            'Callback', {@browseOutputCallback, ...
            outputCtrl, ...
            'Browse for output file'}, ...
            'Position', [0.775 0.6 0.2 0.1]);
        uicontrol('Parent', panel, ...
            'String', 'Help', ...
            'Style', 'pushbutton', ...
            'TooltipString', ...
            'Press for additional instructions.', ...
            'Units','normalized',...
            'Callback', {@helpCallback}, ...
            'Position', [0.775 .45 0.2 0.1]);
        uicontrol('Parent', panel, ...
            'String', 'Update', ...
            'Style', 'pushbutton', ...
            'TooltipString', ['Replaces old HED tags with new HED' ...
            ' tags based on a remap file.'], ...
            'Units','normalized',...
            'Callback', {@replaceCallback}, ...
            'Position', [0.775 0.025 0.2 0.1]);
    end % createButtons

    function createEditBoxes(panel)
        % Creates the edit boxes in the panel
        tsvCtrl = uicontrol('Parent', panel, ...
            'Style', 'edit', ...
            'BackgroundColor', 'w', ...
            'HorizontalAlignment', 'Left', ...
            'String', '', ...
            'TooltipString', ['A tab-delimited input file containing' ...
            ' HED tags associated with a particular study or' ...
            ' experiment events.'], ...
            'Units','normalized',...
            'Callback', {@tsvCtrlCallback}, ...
            'Position', [0.15 0.9 0.6 0.1]);
        mapCtrl = uicontrol('Parent', panel, ...
            'Style', 'edit', ...
            'BackgroundColor', 'w', ...
            'HorizontalAlignment', 'Left', ...
            'Tag', 'validateHedXmlEdit', ...
            'String', '', ...
            'TooltipString', ['A tab-delimited remap file containing' ...
            ' two columns. The tags in the first column are replaced' ...
            ' with the tags in the second column when present in' ...
            ' the input file.'], ...
            'Units','normalized',...
            'Callback', {@mapCtrlCallback}, ...
            'Position', [0.15 0.75 0.6 0.1]);
        outputCtrl = uicontrol('Parent', panel, ...
            'Style', 'edit', ...
            'BackgroundColor', 'w', ...
            'HorizontalAlignment', 'Left', ...
            'String', '', ...
            'TooltipString', ['A output file containing the new' ...
            ' replacement tags.'], ...
            'Units','normalized',...
            'Callback', {@outputCtrlCallback}, ...
            'Position', [0.15 0.6 0.6 0.1]);
        uicontrol('Parent', panel, ...
            'Style', 'edit', ...
            'BackgroundColor', 'w', ...
            'HorizontalAlignment', 'Left', ...
            'String', '2', ...
            'TooltipString', 'Output file', ...
            'Units','normalized',...
            'Callback', {@columnsCtrlCallback}, ...
            'Position', [0.15 0.45 0.6 0.1]);
    end % createEditBoxes

    function createLabels(panel)
        % Creates the labels in the panel
        uicontrol('parent', panel, ...
            'Style', 'Text', ...
            'Units', 'normalized', ...
            'String', 'Input file', ...
            'HorizontalAlignment', 'Left', ...
            'Position', [0 0.9 0.12 0.08]);
        uicontrol('parent', panel, ...
            'Style', 'Text', ...
            'Units', 'normalized', ...
            'String', 'Remap file', ...
            'HorizontalAlignment', 'Left', ...
            'Position', [0 0.75 0.12 0.08]);
        uicontrol('parent', panel, ...
            'Style', 'Text', ...
            'Units', 'normalized', ...
            'String', 'Output file', ...
            'HorizontalAlignment', 'Left', ...
            'Position', [0 0.6 0.12 0.08]);
        uicontrol('parent', panel, ...
            'Style', 'Text', ...
            'Units', 'normalized', ...
            'String', 'Tag columns', ...
            'HorizontalAlignment', 'Left', ...
            'Position', [0 0.45 0.12 0.08]);
    end % createLabels

    function createPanel(tab)
        % Creates replace tags layout
        panel = uipanel('Parent', tab, ...
            'BorderType', 'none', ...
            'BackgroundColor', [.94 .94 .94], ...
            'FontSize', 12, ...
            'Position', [0 0 1 1]);
        createLabels(panel);
        createEditBoxes(panel);
        createButtons(panel);
    end % createPanel


    function outputCtrlCallback(src, eventdata) %#ok<INUSD>
        % Callback for user directly editing the 'Output' editbox
        outputFile = get(src, 'String');
    end % outputCtrlCallback

    function replaceCallback(src, eventdata) %#ok<INUSD>
        % Callback for the tag validation button
        % Callback for convert button
        if isempty(mapFile)
            errordlg('Map file is empty');
        elseif isempty(tsvFile)
            errordlg('Tab-delimited file is empty');
        elseif isempty(outputFile)
            errordlg('Output is empty');
        elseif isempty(tsvTagColumns)
            errordlg('Columns are empty');
        else
            wb = waitbar(.5,'Please wait...');
            try
                remapTSVTags(mapFile, tsvFile, tsvTagColumns, ...
                    'OutputFile', outputFile);
                msgbox('Complete!');
            catch
                errordlg('Failed!');
            end
            close(wb);
        end
    end % replaceCallback

    function helpCallback(src, eventdata) %#ok<INUSD>
        % Callback for the 'Validate' button
        helpdlg(sprintf(['**Options***\n\n' ...
            'Input file - A' ...
            ' tab-delimited file containing HED tags in a single' ...
            ' column or multiple columns.\n\nRemap file -' ...
            ' A tab-delimited file containing the old and' ...\
            ' replacement tags. Each old tag will be in the first' ...
            ' column of the file accompanied by its replacement tag' ...
            ' in the second column.\n\nOutput file - The updated' ...
            ' tab-delimited file containing the new replacement tags.' ...
            ' \n\nTag columns - The tag columns' ...
            ' are to be specified with a single number or a comma' ...
            ' separated list of numbers (e.g. 1 or 1,2,3,4). The' ...
            ' default will be the second column.']), ...
            'Instructions');
    end % helpCallback

    function mapCtrlCallback(src, eventdata) %#ok<INUSD>
        % Callback for user directly editing the 'Remap' editbox
        mapFile = get(src, 'String');
    end % mapCtrlCallback

    function tsvCtrlCallback(src, eventdata) %#ok<INUSD>
        % Callback for user directly editing the 'Tags' editbox
        tsvFile = get(src, 'String');
    end % tsvCtrlCallback

end % createRemapTagsLayout