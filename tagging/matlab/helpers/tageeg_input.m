% tageeg_input
% GUI for input needed to create inputs for tageeg
%
% Usage:
%   >>  tageeg_input()
%
% Description:
% tageeg_input() brings up a GUI for input needed to create inputs for
% tageeg
%
% Function documentation:
% Execute the following in the MATLAB command window to view the function
% documentation for tageeg_input:
%
%    doc tageeg_input
% See also: tageeg, pop_tageeg
%
% Copyright (C) Kay Robbins, Jeremy Cockfield, and Thomas Rognon, UTSA,
% 2011-2015, kay.robbins.utsa.edu jeremy.cockfield.utsa.edu
%
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 2 of the License, or
% (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
%
% $Log: tageeg_input.m,v $
% $Revision: 2.0 10-Jul-2015 14:43:38 $
% $Initial version $
%

function [baseMap, cancelled, editXml, precision, preservePrefix, ...
    saveDataset, saveMapFile, saveMode, selectFields, useGUI] = ...
    tageeg_input()

% Setup the variables used by the GUI
baseMap = '';
cancelled = true;
editXml = false;
preservePrefix = false;
precision = 'preserve';
saveDataset = false;
saveMapFile = '';
saveMode = 'two';
selectFields = true;
useGUI = true;
title = 'Inputs for tagging an EEG structure';
inputFig = figure( ...
    'Color', [.94 .94 .94], ...
    'MenuBar', 'none', ...
    'Name', title, ...
    'NextPlot', 'add', ...
    'NumberTitle','off', ...
    'Resize', 'on', ...
    'Tag', title, ...
    'Toolbar', 'none', ...
    'Visible', 'off', ...
    'WindowStyle', 'modal');
createLayout();
movegui(inputFig); % Make sure it is visible
drawnow
uiwait(inputFig);
if ishandle(inputFig)
    close(inputFig);
end

    function browseSaveTagsCallback(~, ~)
        % Callback for browse button sets a directory for control
        [file,path] = uiputfile({'*.mat', 'MATLAB Files (*.mat)'}, ...
            'Save field map', 'fMap.mat');
        if ischar(file) && ~isempty(file)
            saveMapFile = fullfile(path, file);
            set(findobj('Tag', 'SaveTags'), 'String', saveMapFile);
        end
    end % browseSaveTagsCallback

    function browseTagsCallback(~, ~)
        % Callback for browse button sets a directory for control
        [file, path] = uigetfile({'*.mat', 'MATLAB Files (*.mat)'}, ...
            'Browse for base tags');
        tagsFile = fullfile(path, file);
        if ischar(file) && ~isempty(file) && validateBaseTags(tagsFile)
            baseMap = tagsFile;
            set(findobj('Tag', 'BaseTags'), 'String', baseMap);
        end
    end % browseTagsCallback

    function cancelCallback(src, eventdata)  %#ok<INUSD>
        % Callback for browse button sets a directory for control
        baseMap = '';
        cancelled = true;
        preservePrefix = false;
        precision = 'Preserve';
        saveMapFile = '';
        saveMode = 'two';
        selectFields = true;
        useGUI = true;
        close(inputFig);
    end % browseTagsCallback

    function createBrowsePanel()
        browsePanel = uipanel('BorderType','none', ...
            'BackgroundColor',[.94 .94 .94],...
            'FontSize',12,...
            'Position',[0 .7 1 .3]);
        uicontrol('Parent', browsePanel, ...
            'Style','text', 'String', 'Base tags', ...
            'Units','normalized',...
            'HorizontalAlignment', 'Left', ...
            'Position', [0.015 0.8 0.12 0.13]);
        uicontrol('Parent', browsePanel, ...
            'Style','text', 'String', 'Save tags', ...
            'Units','normalized',...
            'HorizontalAlignment', 'Left', ...
            'Position', [0.015 0.5 0.12 0.13]);
        uicontrol('Parent', browsePanel, 'style', 'edit', ...
            'BackgroundColor', 'w', 'HorizontalAlignment', 'Left', ...
            'Tag', 'BaseTags', 'String', '', ...
            'TooltipString', ...
            'Complete path for loading the consolidated event tags', ...
            'Units','normalized',...
            'Callback', @tagsCtrlCallback, ...
            'Position', [0.15 0.7 0.6 0.25]);
        uicontrol('Parent', browsePanel, 'Style', 'edit', ...
            'BackgroundColor', 'w', 'HorizontalAlignment', 'Left', ...
            'Tag', 'SaveTags', 'String', '', ...
            'TooltipString', ...
            'Complete path for saving the consolidated event tags', ...
            'Units','normalized',...
            'Callback', @saveTagsCtrlCallback, ...
            'Position', [0.15 0.4 0.6 0.25]);
        uicontrol('Parent', browsePanel, ...
            'string', 'Browse', 'style', 'pushbutton', ...
            'TooltipString', 'Press to choose BaseTags file', ...
            'Units','normalized',...
            'Callback', @browseTagsCallback, ...
            'Position', [0.775 0.7 0.21 0.25]);
        uicontrol('Parent', browsePanel, ...
            'string', 'Browse', 'style', 'pushbutton', ...
            'TooltipString', 'Press to find directory to save tags object', ...
            'Units','normalized',...
            'Callback', @browseSaveTagsCallback, ...
            'Position', [0.775 0.4 0.21 0.25]);
    end % createBrowsePanel

    function createButtonPanel()
        % Create the button panel on the side of GUI
        rewriteGroupPanel = uipanel('BorderType','none', ...
            'BackgroundColor',[.94 .94 .94],...
            'FontSize',12,...
            'Position',[0.6 0 .4 .2]);
        uicontrol('Parent', rewriteGroupPanel, ...
            'Style', 'pushbutton', 'Tag', 'OkayButton', ...
            'String', 'Okay', 'Enable', 'on', 'Tooltip', ...
            'Save the current configuration in a file', ...
            'Units','normalized', ...
            'Callback', @okayCallback, ...
            'Position',[0.025 0.3 0.45 0.4]);
        uicontrol('Parent', rewriteGroupPanel, ...
            'Style', 'pushbutton', 'Tag', 'CancelButton', ...
            'String', 'Cancel', 'Enable', 'on', 'Tooltip', ...
            'Cancel the directory tagging', ...
            'Units','normalized', ...
            'Callback', @cancelCallback, ...
            'Position',[0.515 0.3 0.45 0.4]);
    end % createButtonPanel

    function createLayout()
        createBrowsePanel();
        createWriteGroupPanel();
        createOptionsGroupPanel();
        createButtonPanel();
    end % createLayout

    function createOptionsGroupPanel()
        % Create the button panel on the side of GUI
        optionGroupPanel = uipanel('BackgroundColor',[.94,.94,.94],...
            'FontSize',12,...
            'Title','Other options', ...
            'Position',[0.535 .2 .45 .5]);
        uicontrol('Parent', optionGroupPanel, ...
            'Style', 'CheckBox', 'Tag', 'SaveCB', ...
            'String', 'Save to dataset file', 'Enable', 'on', 'Tooltip', ...
            'If checked, save tags to dataset files', ...
            'Units','normalized', ...
            'Value', 0, ...
            'Callback', @saveCallback, ...
            'Position', [0.1 0.8 0.8 0.1]);
        uicontrol('Parent', optionGroupPanel, ...
            'Style', 'CheckBox', 'Tag', 'UseGUICB', ...
            'String', 'Use GUI to edit tags', 'Enable', 'on', 'Tooltip', ...
            'If checked, use GUI to edit consolidated tags', ...
            'Units','normalized', ...
            'Value', 1, ...
            'Callback', @useGUICallback, ...
            'Position', [0.1 0.65 0.8 0.1]);
        uicontrol('Parent', optionGroupPanel, ...
            'Style', 'CheckBox', 'Tag', 'SelectFieldsCB', ...
            'String', 'Use GUI to select fields to tag', 'Enable', 'on', 'Tooltip', ...
            'If checked, use GUI to select which fields to tag', ...
            'Units','normalized', ...
            'Value', 1, ...
            'Callback', @selectCallback, ...
            'Position', [0.1 0.5 0.8 0.1]);
        uicontrol('Parent', optionGroupPanel, ...
            'Style', 'CheckBox', 'Tag', 'EditXMLCB', ...
            'String', 'XML containing schema can be edited', 'Enable', 'on', 'Tooltip', ...
            'If checked, XML containing all of the schema tags can be edited', ...
            'Units','normalized', ...
            'Value', 0, ...
            'Callback', @editXmlCallback, ...
            'Position', [0.1 0.35 0.9 0.1]);
        uicontrol('Parent', optionGroupPanel, ...
            'Style', 'CheckBox', 'Tag', 'PreservePrefixCB', ...
            'String', 'Preserve tag prefixes', 'Enable', 'on', 'Tooltip', ...
            'If checked, do not consolidate tags that share prefixes', ...
            'Units','normalized', ...
            'Value', 0, ...
            'Callback', @preservePrefixCallback, ...
            'Position', [0.1 0.2 0.8 0.1]);
    end % createOptionsGroupPanel

    function createWriteGroupPanel()
        % Create the button panel on the side of GUI
        writeButtonGroup = uibuttongroup('BackgroundColor', ...
            [.94,.94,.94],...
            'FontSize',12,...
            'Title','Data precision save options', ...
            'Tag', 'WriteButtonGroup', ...
            'SelectionChangeFcn', @rewriteCallback, ...
            'Position',[0.015 .2 .45 .5]);
        uicontrol('Parent', writeButtonGroup, ...
            'Style', 'RadioButton', 'Tag', 'Double OneFile', ...
            'String', 'Double(.set file)', 'Enable', 'off', ...
            'Tooltip', 'If selected, save the data as double precision and the dataset in a .set file', ...
            'Units','normalized', ...
            'Position', [0.1 0.8 0.8 0.1]);
        uicontrol('Parent', writeButtonGroup, ...
            'Style', 'RadioButton', 'Tag', 'Single OneFile', ...
            'String', 'Single(.set file)', 'Enable', 'off', 'Tooltip', ...
            'If selected, save the data as single precision and the dataset in a .set file', ...
            'Units','normalized', ...
            'Position', [0.1 0.6 0.8 0.1]);
        uicontrol('Parent', writeButtonGroup, ...
            'Style', 'RadioButton', 'Tag', 'Single TwoFiles', ...
            'String', 'Single(.set and .fdt files)', 'Enable', 'off', 'Tooltip', ...
            'If selected, save the data as single precision and the dataset in a .set and .fdt file', ...
            'Units','normalized', ...
            'Position', [0.1 0.4 0.8 0.1]);
        uicontrol('Parent', writeButtonGroup, ...
            'Style', 'RadioButton', 'Tag', 'Preserve', ...
            'String', 'Preserve', 'Value', 1', 'Enable', 'off', 'Tooltip', ...
            'If selected, preserve the data precision and preserve the way that the dataset is saved.', ...
            'Units','normalized', ...
            'Position', [0.1 0.2 0.8 0.1]);
    end % createWriteGroupPanel

    function okayCallback(~, ~)
        % Callback for closing GUI window
        cancelled = false;
        close(inputFig);
    end % okayCallback

    function preservePrefixCallback(src, ~)
        preservePrefix = get(src, 'Max') == get(src, 'Value');
    end % useGUICallback

    function rewriteCallback(src, ~)
        % Callback for the radio button group
        value = lower(get(get(src, 'SelectedObject'), 'Tag'));
        splitValue = strsplit(value);
        precision = splitValue{1};
        saveMode = splitValue{2};
    end % rewriteCallback

    function saveTagsCtrlCallback(src, ~)
        % Callback for user directly editing directory control textbox
        saveMapFile = get(src, 'String');
    end % saveTagsCtrlCallback

    function selectCallback(src, ~)
        selectFields = get(src, 'Max') == get(src, 'Value');
    end % selectCallback

    function tagsCtrlCallback(src, ~)
        % Callback for user directly editing directory control textbox
        tagsFile = get(src, 'String');
        if ~isempty(strtrim(tagsFile)) && validateBaseTags(tagsFile)
            baseMap = tagsFile;
        end
    end % tagsCtrlCallback

    function valid = validateBaseTags(tagsFile)
        valid = true;
        if isempty(fieldMap.loadFieldMap(tagsFile))
            valid = false;
            warndlg([ tagsFile ...
                ' is a invalid base tag file'], 'Invalid file');
            set(findobj('Tag', 'BaseTags'), 'String', baseMap);
        end
    end % validateBaseTags

    function saveCallback(src, ~)
        saveDataset = get(src, 'Max') == get(src, 'Value');
        if ~saveDataset
            set(findall(findobj('Tag', 'WriteButtonGroup'), ...
                '-property', 'Enable'), 'Enable', 'off')
        else
            set(findall(findobj('Tag', 'WriteButtonGroup'), ...
                '-property', 'Enable'), 'Enable', 'on')
        end
    end % saveAllCallback

    function useGUICallback(src, ~)
        useGUI = get(src, 'Max') == get(src, 'Value');
        if ~useGUI
            set(findobj('Tag', 'SelectFieldsCB'), 'Enable', 'off');
            set(findobj('Tag', 'EditXMLCB'), 'Enable', 'off');
            set(findobj('Tag', 'PreservePrefixCB'), 'Enable', 'off');
        else
            set(findobj('Tag', 'SelectFieldsCB'), 'Enable', 'on');
            set(findobj('Tag', 'EditXMLCB'), 'Enable', 'on');
            set(findobj('Tag', 'PreservePrefixCB'), 'Enable', 'on');
        end
    end % useGUICallback

    function editXmlCallback(src, ~)
        editXml = get(src, 'Max') == get(src, 'Value');
    end % editXmlCallback

end % tageeg_input