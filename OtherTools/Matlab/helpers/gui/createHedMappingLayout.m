function createHedMappingLayout(tab)
latestHED = 'HED 2.026';
oldHed = '';
newHed ='';
remap = '';
output = '';
oldHedCtrl = '';
newHedCtrl = '';
remapCtrl = '';
outputCtrl = '';
createPanel(tab);

    function browseNewHedCallback(src, eventdata, hedCtrl, ...
            myTitle) %#ok<INUSL>
        % Callback for 'Browse' button that sets the 'New HED' editbox
        [fName, dName] = uigetfile({'*.xml', 'xml Files (*.xml)'}, ...
            myTitle);
        if fName ~= 0
            newHed = fullfile(dName, fName);
            set(hedCtrl, 'String', newHed);
        end
    end % browseNewHedCallback

    function browseOldHedCallback(src, eventdata, hedCtrl, ...
            myTitle) %#ok<INUSL>
        % Callback for 'Browse' button that sets the 'Old HED' editbox
        [fName, dName] = uigetfile({'*.xml', 'xml Files (*.xml)'}, ...
            myTitle);
        if fName ~= 0
            oldHed = fullfile(dName, fName);
            set(hedCtrl, 'String', oldHed);
        end
    end % browseOldHedCallback

    function browseOutputCallback(src, eventdata, ...
            remapOutputCtrl, myTitle) %#ok<INUSL>
        % Callback for 'Browse' button that sets the 'Output' editbox
        startPath = get(remapOutputCtrl, 'String');
        if isempty(startPath) || ~ischar(startPath) || ~isdir(startPath)
            startPath = pwd;
        end
        dName = uigetdir(startPath, myTitle); 
        if dName ~= 0
            setOutput(dName);
        end
    end % browseOutputCallback

    function browseRemapCallback(src, eventdata, remapCtrl, ...
            myTitle) %#ok<INUSL>
        % Callback for 'Browse' button that sets the 'Remap' editbox
        [fName, dName] = uigetfile({'*.txt', 'txt Files (*.txt)'}, ...
            myTitle);
        if fName ~= 0
            remap = fullfile(dName, fName);
            set(remapCtrl, 'String', remap);
            setOutput(dName);
        end
    end % browseRemapCallback

    function createMapCallback(src, eventdata) %#ok<INUSD>
        % Callback for 'Create map' button
        if isempty(oldHed)
            errordlg('Old HED XML file is empty');
        elseif isempty(newHed)
            errordlg('New HED XML file is empty');
        elseif isempty(remap)
            errordlg('Remap file is empty');
        elseif isempty(output)
            errordlg('Output file is empty');
        else
            wb = waitbar(.5,'Please wait...');
            try
                createhedmap(oldHed, newHed, remap, output);
                msgbox('Map creation complete');
            catch
                errordlg('Map creation failed');
            end
            close(wb);
        end
    end % createMapCallback

    function createButtons(panel)
        % Creates the buttons in the panel
        uicontrol('Parent', panel, ...
            'String', 'Browse', ...
            'Style', 'pushbutton', ...
            'TooltipString', 'Press to choose old HED XML file', ...
            'Units','normalized',...
            'Callback', {@browseOldHedCallback, ...
            oldHedCtrl, ...
            'Browse for old HED XML file'}, ...
            'Position', [0.775 0.85 0.2 0.1]);
        uicontrol('Parent', panel, ...
            'String', 'Browse', ...
            'Style', 'pushbutton', ...
            'TooltipString', 'Press to choose new HED XML file', ...
            'Units','normalized',...
            'Callback', {@browseNewHedCallback, ...
            newHedCtrl, ...
            'Browse for new HED XML file'}, ...
            'Position', [0.775 0.7 0.2 0.1]);
        uicontrol('Parent', panel, ...
            'String', 'Browse', ...
            'Style', 'pushbutton', ...
            'TooltipString', 'Press to choose remap file', ...
            'Units','normalized',...
            'Callback', {@browseRemapCallback, ...
            remapCtrl, 'Browse for remap file'}, ...
            'Position', [0.775 0.55 0.2 0.1]);
        uicontrol('Parent', panel, ...
            'String', 'Browse', ...
            'Style', 'pushbutton', ...
            'TooltipString', ...
            'Press to choose output file directory', ...
            'Units','normalized',...
            'Callback', {@browseOutputCallback, ...
            outputCtrl, ...
            'Browse for output file'}, ...
            'Position', [0.775 0.4 0.2 0.1]);
        uicontrol('Parent', panel, ...
            'String', 'Create map', ...
            'Style', 'pushbutton', ...
            'TooltipString', 'Creates a map of HED tags', ...
            'Units','normalized',...
            'Callback', {@createMapCallback}, ...
            'Position', [0.775 0.05 0.2 0.1]);
    end % createButtons

    function createEditBoxes(panel)
        % Creates the edit boxes in the panel
        oldHedCtrl = uicontrol('Parent', panel, ...
            'Style', 'edit', ...
            'BackgroundColor', 'w', ...
            'HorizontalAlignment', 'Left', ...
            'String', '', ...
            'TooltipString', 'Old HED XML file', ...
            'Units','normalized',...
            'Callback', {@oldHedCtrlCallback}, ...
            'Position', [0.15 0.85 0.6 0.1]);
        newHedCtrl = uicontrol('Parent', panel, ...
            'Style', 'edit', ...
            'BackgroundColor', 'w', ...
            'HorizontalAlignment', 'Left', ...
            'String', '', ...
            'TooltipString', 'New HED XML file', ...
            'Units','normalized',...
            'Callback', {@newHedCtrlCallback}, ...
            'Position', [0.15 0.7 0.6 0.1]);
        remapCtrl = uicontrol('Parent', panel, ...
            'Style', 'edit', ...
            'BackgroundColor', 'w', ...
            'HorizontalAlignment', 'Left', ...
            'String', '', ...
            'TooltipString', 'HED remap file', ...
            'Units','normalized',...
            'Callback', {@remapCtrlCallback}, ...
            'Position', [0.15 0.55 0.6 0.1]);
        outputCtrl = uicontrol('Parent', panel, ...
            'Style', 'edit', ...
            'BackgroundColor', 'w', ...
            'HorizontalAlignment', 'Left', ...
            'String', '', ...
            'TooltipString', 'Output file', ...
            'Units','normalized',...
            'Callback', {@outputCtrlCallback}, ...
            'Position', [0.15 0.4 0.6 0.1]);
    end % createEditBoxes

    function createLabels(panel)
        % Creates the labels in the panel
        uicontrol('parent', panel, ...
            'Style', 'Text', ...
            'Units', 'normalized', ...
            'String', 'Old HED', ...
            'HorizontalAlignment', 'Left', ...
            'Position', [0.04 0.8 0.12 0.12]);
        uicontrol('parent', panel, ...
            'Style', 'Text', ...
            'Units', 'normalized', ...
            'String', 'New HED', ...
            'HorizontalAlignment', 'Left', ...
            'Position', [0.04 0.65 0.12 0.12]);
        uicontrol('parent', panel, ...
            'Style', 'Text', ...
            'Units', 'normalized', ...
            'String', 'Remap', ...
            'HorizontalAlignment', 'Left', ...
            'Position', [0.04 0.5 0.12 0.12]);
        uicontrol('parent', panel, ...
            'Style', 'Text', ...
            'Units', 'normalized', ...
            'String', 'Output', ...
            'HorizontalAlignment', 'Left', ...
            'Position', [0.04 0.35 0.12 0.12]);
    end % createLabels

    function createPanel(tab)
        % Creates HED mapping layout
        panel = uipanel('Parent', tab, ...
            'BorderType', 'none', ...
            'BackgroundColor', [.94 .94 .94], ...
            'FontSize', 12, ...
            'Position', [0 0 1 1]);
        createLabels(panel);
        createEditBoxes(panel);
        createButtons(panel);
    end % createPanel

    function newHedCtrlCallback(src, eventdata) %#ok<INUSD>
        % Callback for user directly editing the 'New HED' editbox
        newHed = get(src, 'String');
    end % newHedCtrlCallback

    function oldHedCtrlCallback(src, eventdata) %#ok<INUSD>
        % Callback for user directly editing the 'Old HED' editbox
        oldHed = get(src, 'String');
    end % oldHedCtrlCallback

    function outputCtrlCallback(src, eventdata) %#ok<INUSD>
        % Callback for user directly editing the 'Output' editbox
        output = get(src, 'String');
    end % outputCtrlCallback

    function remapCtrlCallback(src, eventdata) %#ok<INUSD>
        % Callback for user directly editing the 'Remap' editbox
        remap = get(src, 'String');
    end % remapCtrlCallback

    function setOutput(dName)
        % Sets the 'Output' edit box based on the 'Remap' editbox
        if isempty(remap)
            output = fullfile(dName, ...
                [latestHED '_output.txt']);
        else
            [~, file] = fileparts(remap);
            output = fullfile(dName, [file '_output.txt']);
        end
        set(outputCtrl, 'String', output);
    end % setOutput

end % createHedMappingLayout