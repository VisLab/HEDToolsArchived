function [filename, fieldname, eventColumn, tagColumns, cancelled] = ...
    tagtsv_input()
cancelled = true;
filename = '';
eventColumn = '1';
tagColumns = '2';
fieldname = 'type';
theTitle = 'Inputs for creating a tagMap from a tab-separated file';
inputFig = figure( ...
    'MenuBar', 'none', ...
    'Name', theTitle, ...
    'NextPlot', 'add', ...
    'NumberTitle','off', ...
    'Resize', 'on', ...
    'Tag', theTitle, ...
    'Toolbar', 'none', ...
    'Visible', 'off', ...
    'WindowStyle', 'modal');
createLayout();
movegui(inputFig); % Make sure it is visible
uiwait(inputFig);

    function createLayout()
        createBrowsePanel();
        createOptionsGroupPanel();
        createButtonPanel();
    end

    function createBrowsePanel()
        browsePanel = uipanel('BorderType','none', ...
            'BackgroundColor',[.94 .94 .94],...
            'FontSize',12,...
            'Position',[0 .6 1 .3]);
        uicontrol('Parent', browsePanel, ...
            'Style','text', 'String', 'TSV file', ...
            'Units','normalized',...
            'HorizontalAlignment', 'Left', ...
            'Position', [0.05 0.8 0.1 0.1]);
        tsvCtrl = uicontrol('Parent', browsePanel, 'Style', 'edit', ...
            'BackgroundColor', 'w', 'HorizontalAlignment', 'Left', ...
            'Tag', 'StudyEdit', 'String', '', ...
            'TooltipString', ...
            'TSV file name', ...
            'Units','normalized',...
            'Callback', {@tsvCtrlCallback}, ...
            'Position', [0.15 0.7 0.6 0.25]);
        uicontrol('Parent', browsePanel, ...
            'string', 'Browse', ...
            'style', 'pushbutton', 'TooltipString', ...
            'Press to bring up file chooser chooser', ...
            'Units','normalized',...
            'Callback', {@browseTSVCallback, tsvCtrl, ...
            'Browse for tab-delimited file'}, ...
            'Position', [0.775 0.7 0.2 0.25]);
    end % createBrowsePanel

    function createOptionsGroupPanel()
        % Create the button panel on the side of GUI
        optionGroupPanel = uipanel('BackgroundColor',[.94,.94,.94],...
            'FontSize',12,...
            'Title','tagMap Options', ...
            'Position',[0.15 .3 .7 .45]);
        uicontrol('Parent', optionGroupPanel, ...
            'Style','text', 'String', 'Group name', ...
            'Units','normalized',...
            'HorizontalAlignment', 'Left', ...
            'Position', [0.05 0.8 0.2 0.1]);
        uicontrol('Parent', optionGroupPanel, ...
            'Style','text', 'String', 'Event column', ...
            'Units','normalized',...
            'HorizontalAlignment', 'Left', ...
            'Position', [0.05 0.5 0.2 0.1]);
        uicontrol('Parent', optionGroupPanel, ...
            'Style','text', 'String', 'Tag column', ...
            'Units','normalized',...
            'HorizontalAlignment', 'Left', ...
            'Position', [0.05 .2 0.2 0.1]);
        uicontrol('Parent', optionGroupPanel, 'Style', 'edit', ...
            'BackgroundColor', 'w', 'HorizontalAlignment', 'Left', ...
            'Tag', 'tagMapGroup', 'String', 'type', ...
            'TooltipString', ...
            'tagMap group', ...
            'Units','normalized',...
            'Callback', {@tagMapGroupCtrlCallback}, ...
            'Position', [0.3 0.7 0.6 0.25]);
        uicontrol('Parent', optionGroupPanel, 'style', 'edit', ...
            'BackgroundColor', 'w', 'HorizontalAlignment', 'Left', ...
            'Tag', 'eventColumn', 'String', '1', ...
            'TooltipString', ...
            'Tab-delimited event column', ...
            'Units','normalized',...
            'Callback', {@eventColumnCtrlCallback}, ...
            'Position', [0.3 0.4 0.6 0.25]);
        uicontrol('Parent', optionGroupPanel, 'Style', 'edit', ...
            'BackgroundColor', 'w', 'HorizontalAlignment', 'Left', ...
            'Tag', 'tagColumn', 'String', '2', ...
            'TooltipString', ...
            'Tab-delimited tag column(s)', ...
            'Units','normalized',...
            'Callback', {@tagColumnCtrlCallback}, ...
            'Position', [0.3 0.1 0.6 0.25]);
    end % createOptionsGroupPanel

    function createButtonPanel()
        % Create the button panel on the side of GUI
        rewriteGroupPanel = uipanel('BorderType','none', ...
            'BackgroundColor',[.94 .94 .94],...
            'FontSize',12,...
            'Position',[0.6 0 .4 .2]);
        uicontrol('Parent', rewriteGroupPanel, ...
            'Style', 'pushbutton', 'Tag', 'OkayButton', ...
            'String', 'Okay', 'Enable', 'on', 'Tooltip', ...
            'Save the current configuration in a file', ...
            'Units','normalized', ...
            'Callback', {@okayCallback}, ...
            'Position',[0.025 0.3 0.45 0.4]);
        uicontrol('Parent', rewriteGroupPanel, ...
            'Style', 'pushbutton', 'Tag', 'CancelButton', ...
            'String', 'Cancel', 'Enable', 'on', 'Tooltip', ...
            'Cancel the directory tagging', ...
            'Units','normalized', ...
            'Callback', {@cancelCallback}, ...
            'Position',[0.5 0.3 0.45 0.4]);
    end % createButtonPanel

    function browseTSVCallback(src, eventdata, tsvCtrl, myTitle) %#ok<INUSL>
        % Callback for browse button sets a directory for control
        [fName, fPath] = uigetfile({'*.*', 'All files(*.*)'}, myTitle);
        fName = fullfile(fPath, fName);
        if ~isempty(fName) && ischar(fName) && exist(fName, 'file')
            set(tsvCtrl, 'String', fName);
            filename = fName;
        end
    end % browseTSVCallback

    function tagMapGroupCtrlCallback(hObject, eventdata) %#ok<INUSD>
        % Callback for user directly editing directory control textbox
        fieldname = get(hObject, 'String');
    end % tsvCtrlCallback

    function eventColumnCtrlCallback(hObject, eventdata) %#ok<INUSD>
        % Callback for user directly editing directory control textbox
        if ~isnan(str2double(get(hObject, 'String')))
            eventColumn = get(hObject, 'String');
        else
            set(hObject, 'String', eventColumn);
        end
    end % tsvCtrlCallback

    function tagColumnCtrlCallback(hObject, eventdata) %#ok<INUSD>
        % Callback for user directly editing directory control textbox
        if ~isempty(str2num(get(hObject, 'String'))) %#ok<ST2NM>
            tagColumns = get(hObject, 'String');
        else
            set(hObject, 'String', tagColumns);
        end
    end % tsvCtrlCallback

    function tsvCtrlCallback(hObject, eventdata) %#ok<INUSD>
        % Callback for user directly editing directory control textbox
        fileName = get(hObject, 'String');
        if isfile(fileName)
            filename = fileName;
        else  % if user entered invalid directory reset back
            set(hObject, 'String', filename);
        end
    end % tsvCtrlCallback

    function cancelCallback(src, eventdata)  %#ok<INUSD>
        % Callback for browse button sets a directory for control
        cancelled = true;
        filename = '';
        eventColumn = [];
        tagColumns = [];
        fieldname = '';
        close(inputFig);
    end % cancelCallback

    function okayCallback(src, eventdata)  %#ok<INUSD>
        % Callback for closing GUI window
        cancelled = false;
        eventColumn = str2double(eventColumn);
        tagColumns = str2num(tagColumns); %#ok<ST2NM>
        close(inputFig);
    end % okayCallback

end % tagtsv_input